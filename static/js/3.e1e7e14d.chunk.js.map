{"version":3,"sources":["components/Counter/Controls.jsx","components/Counter/Value.jsx","components/Counter/Counter.jsx","redux/actions/counter-actions.js"],"names":["Controls","step","onIncrement","onDecrement","className","type","onClick","Value","value","connect","state","counter","dispatch","counterTypes","INCREMENT","payload","actions","DECREMENT"],"mappings":"sNASeA,EATE,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YACnC,OACI,sBAAKC,UAAU,oBAAf,UACI,yBAAQC,KAAK,SAASC,QAASJ,EAA/B,uBAAuDD,KACvD,yBAAQI,KAAK,SAASC,QAASH,EAA/B,uBAAuDF,SCFpDM,EAFD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,sBAAMJ,UAAU,iBAAhB,SAAkCI,KC6BhDC,G,MAAAA,aAVS,SAAAC,GAAK,MAAK,CAChCF,MAAOE,EAAMC,QAAQH,MACrBP,KAAMS,EAAMC,QAAQV,SAGK,SAAAW,GAAQ,MAAK,CACtCV,YAAa,SAACM,GAAD,OAAWI,ECvBD,SAAAJ,GAAK,MAAK,CAC/BH,KAAMQ,IAAaC,UACnBC,QAASP,GDqBsBQ,CAAkBR,KACnDL,YAAa,SAACK,GAAD,OAAWI,ECnBD,SAAAJ,GAAK,MAAK,CAC/BH,KAAMQ,IAAaI,UACnBF,QAASP,GDiBsBQ,CAAkBR,QAGtCC,EAvBC,SAAC,GAA8C,IAA5CD,EAA2C,EAA3CA,MAAOP,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,YAC3C,OACE,sBAAKC,UAAU,UAAf,UACE,cAAC,EAAD,CACAI,MAAQA,IACR,cAAC,EAAD,CACAP,KAAOA,EACPC,YAAa,kBAAMA,EAAYD,IAC/BE,YAAa,kBAAMA,EAAYF","file":"static/js/3.e1e7e14d.chunk.js","sourcesContent":["const Controls = ({ step, onIncrement, onDecrement }) => {\n    return (\n        <div className=\"Counter__controls\">\n            <button type=\"button\" onClick={onIncrement}>increment {step}</button>\n            <button type=\"button\" onClick={onDecrement}>dicrement {step}</button>\n        </div>\n    )\n}\n\nexport default Controls;","const Value = ({ value }) => <span className=\"Counter__value\">{value}</span>;\n\nexport default Value;","import { connect } from 'react-redux';\nimport * as actions from '../../redux/actions/counter-actions';\nimport Controls from './Controls.jsx';\nimport Value from './Value.jsx';\nimport './Counter.css';\n\nconst Counter = ({ value, step, onIncrement, onDecrement }) =>{\n  return (\n    <div className=\"Counter\">\n      <Value \n      value={ value } />\n      <Controls \n      step={ step }\n      onIncrement={() => onIncrement(step)} \n      onDecrement={() => onDecrement(step)}/>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  value: state.counter.value,\n  step: state.counter.step\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onIncrement: (value) => dispatch(actions.increment(value)),\n  onDecrement: (value) => dispatch(actions.decrement(value))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n","import counterTypes from './counter-types';\n\nexport const increment = value => ({\n    type: counterTypes.INCREMENT,\n    payload: value,\n})\n  \nexport const decrement = value => ({\n    type: counterTypes.DECREMENT,\n    payload: value,\n})"],"sourceRoot":""}